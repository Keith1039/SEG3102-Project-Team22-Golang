package templates


import (
    "strconv"
    "github.com/Keith1039/SEG3102-Project-Team22-Golang/structs"
)

type ParametersForm struct {
    ParametersID string
    Minimum string
    Maximum string
}

func (values ParametersForm) Validate() map[string]string{
    var minVal, maxVal int
    var err error
    errors := map[string]string{}

    minVal, err = strconv.Atoi(values.Minimum)
    if err != nil {
        errors["Minimum"] = "Minimum isn't an integer"
    }
    maxVal, err = strconv.Atoi(values.Maximum)
    if err != nil {
        errors["Maximum"] = "Maximum isn't an integer"
    }
    if errors["Maximum"] == "" && errors["Minimum"] == "" {
        if minVal < 1 {
            errors["Minimum"] = "Invalid minimum, minimum must be a positive number greater than 1"
        }
        if maxVal < 1 || maxVal < minVal{
            errors["Maximum"] = "Invalid maximum, maximum must be a positive number greater than 1 and greater than or equal to the minimum"
        }
    }
    return errors
}

templ ParameterCreate(values ParametersForm, errors map[string]string) {
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>HTMX & Go - Demo</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
            <script src="https://unpkg.com/htmx.org@1.9.2" integrity="sha384-L6OqL9pRWyyFU3+/bjdSri+iIphTN/bvYyM37tICVyOJkWZLpP2vGn6VUEXgzg6h" crossorigin="anonymous"></script>
        </head>

        <form hx-post="/create-parameter/" hx-indicator="#spinner">
            <div class="mb-2">
                <label for="minimum">Minimum: </label>
                <input type="number" pattern="[0-9]" name="minimum" id="minimum" class="form-control" value={values.Minimum} required/>
                if errors["Minimum"] != "" {
                    <div style="color:red">{errors["Minimum"]}</div>
                }
            </div>
            <div class="mb-3">
                <label for="maximum">Maximum: </label>
                <input type="number" pattern="[0-9]" name="maximum" id="maximum" class="form-control" value={values.Maximum} required/>
                if errors["Maximum"] != "" {
                    <div style="color:red">{errors["Maximum"]}</div>
                }
            </div>
            if errors["Conversion"] != "" {
                <div style="color:red">{errors["Conversion"]}</div>
            }
            <button type="submit" class="btn btn-primary">
                <span class="spinner-border spinner-border-sm htmx-indicator" id="spinner" role="status" aria-hidden="true"></span>
                Submit
            </button>
        </form>
    </html>
}

templ UpdateParameter(values ParametersForm, teamInformation structs.Team, errors map[string]string) {
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta http-equiv="X-UA-Compatible" content="IE=edge">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>HTMX & Go - Demo</title>
            <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
            <script src="https://unpkg.com/htmx.org@1.9.2" integrity="sha384-L6OqL9pRWyyFU3+/bjdSri+iIphTN/bvYyM37tICVyOJkWZLpP2vGn6VUEXgzg6h" crossorigin="anonymous"></script>
        </head>

        <div id="parametersID">parameter ID: {values.ParametersID}</div>
        <form hx-post="/create-parameter/" hx-indicator="#spinner">
            <div class="mb-2">
                <label for="minimum">Minimum: </label>
                <input type="number" pattern="[0-9]" name="minimum" id="minimum" class="form-control" value={values.Minimum} required/>
                if errors["Minimum"] != "" {
                    <div style="color:red">{errors["Minimum"]}</div>
                }
            </div>
            <div class="mb-3">
                <label for="maximum">Maximum: </label>
                <input type="number" pattern="[0-9]" name="maximum" id="maximum" class="form-control" value={values.Maximum} required/>
                if errors["Maximum"] != "" {
                    <div style="color:red">{errors["Maximum"]}</div>
                }
            </div>
            if errors["Conversion"] != "" {
                <div style="color:red">{errors["Conversion"]}</div>
            }
            <button type="submit" class="btn btn-primary">
                <span class="spinner-border spinner-border-sm htmx-indicator" id="spinner" role="status" aria-hidden="true"></span>
                Submit
            </button>
        </form>
    </html>
}